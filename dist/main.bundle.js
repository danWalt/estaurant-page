(()=>{"use strict";var n={402:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(15),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"body {\r\n    background-color: #76949F;\r\n    color: #533747;\r\n    font-size: 20px;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    text-align: center;\r\n    background-color: #86BBBD;\r\n    margin:0;\r\n    padding:0;\r\n    flex-direction: column;\r\n}\r\n\r\n\r\n#title {\r\n    color: #CEFDFF;\r\n}\r\n\r\n\r\nnav {\r\n    flex-direction: column;\r\n    margin: 0 auto;\r\n    padding: 0 auto;\r\n}\r\n\r\n.hidden {\r\n    border-bottom: 2px solid white;\r\n}\r\n\r\nh1 {\r\n    margin: 0 auto;\r\n    padding: 0 auto;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n  }\r\n\r\nul {\r\n    display: flex;\r\n    position: center;\r\n    list-style-type: none;\r\n}\r\n\r\nli {\r\n    padding: 7px;\r\n}\r\n\r\n#content {\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    \r\n}\r\n\r\n.text-box {\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n    margin: 0 auto;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    padding-top: 8px;\r\n    width: 40%;\r\n    font-size: 30px;\r\n}\r\n\r\nimg {\r\n    width: 40%;\r\n    padding-top: 10px;\r\n}","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,yBAAyB;IACzB,QAAQ;IACR,SAAS;IACT,sBAAsB;AAC1B;;;AAGA;IACI,cAAc;AAClB;;;AAGA;IACI,sBAAsB;IACtB,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,cAAc;IACd,eAAe;IACf,mBAAmB;IACnB,kBAAkB;EACpB;;AAEF;IACI,aAAa;IACb,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;;AAE3B;;AAEA;IACI,uBAAuB;IACvB,kBAAkB;IAClB,cAAc;IACd,gBAAgB;IAChB,mBAAmB;IACnB,gBAAgB;IAChB,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,iBAAiB;AACrB",sourcesContent:["body {\r\n    background-color: #76949F;\r\n    color: #533747;\r\n    font-size: 20px;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    text-align: center;\r\n    background-color: #86BBBD;\r\n    margin:0;\r\n    padding:0;\r\n    flex-direction: column;\r\n}\r\n\r\n\r\n#title {\r\n    color: #CEFDFF;\r\n}\r\n\r\n\r\nnav {\r\n    flex-direction: column;\r\n    margin: 0 auto;\r\n    padding: 0 auto;\r\n}\r\n\r\n.hidden {\r\n    border-bottom: 2px solid white;\r\n}\r\n\r\nh1 {\r\n    margin: 0 auto;\r\n    padding: 0 auto;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n  }\r\n\r\nul {\r\n    display: flex;\r\n    position: center;\r\n    list-style-type: none;\r\n}\r\n\r\nli {\r\n    padding: 7px;\r\n}\r\n\r\n#content {\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    \r\n}\r\n\r\n.text-box {\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n    margin: 0 auto;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    padding-top: 8px;\r\n    width: 40%;\r\n    font-size: 30px;\r\n}\r\n\r\nimg {\r\n    width: 40%;\r\n    padding-top: 10px;\r\n}"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,r){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&o[d[0]]||(t&&(d[2]?d[2]="".concat(t," and ").concat(d[2]):d[2]=t),e.push(d))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}n.exports=function(n){var t,r,o=(r=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var r,o,i=[],a=!0,c=!1;try{for(t=t.call(n);!(a=(r=t.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(n){c=!0,o=n}finally{try{a||null==t.return||t.return()}finally{if(c)throw o}}return i}}(t,r)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(n,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),s="/*# ".concat(d," */"),l=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[i].concat(l).concat([s]).join("\n")}return[i].join("\n")}},962:(n,e,t)=>{t.r(e),t.d(e,{default:()=>p});var r=t(379),o=t.n(r),i=t(795),a=t.n(i),c=t(695),d=t.n(c),s=t(216),l=t.n(s),u=t(402),A={styleTagTransform:function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}},setAttributes:function(n){var e=t.nc;e&&n.setAttribute("nonce",e)},insert:function(n){var e=d()("head");if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(n)}};A.domAPI=a(),A.insertStyleElement=l(),o()(u.Z,A);const p=u.Z&&u.Z.locals?u.Z.locals:void 0},695:n=>{var e={};n.exports=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],c=0;c<n.length;c++){var d=n[c],s=r.base?d[0]+r.base:d[0],l=i[s]||0,u="".concat(s," ").concat(l);i[s]=l+1;var A=t(u),p={css:d[1],media:d[2],sourceMap:d[3]};-1!==A?(e[A].references++,e[A].updater(p)):e.push({identifier:u,updater:o(p,r),references:1}),a.push(u)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var d=r(n,o),s=0;s<i.length;s++){var l=t(i[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=d}}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r=t.css,o=t.media,i=t.sourceMap;o?n.setAttribute("media",o):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{const n=function(){return function(){const n=document.createElement("div");return n.setAttribute("id","content"),function(n){const e=document.createElement("div");e.setAttribute("id","home-img"),e.classList.add("img-div");const t=document.createElement("img");t.src="src\\images\\atlas2.jpg",e.appendChild(t),n.appendChild(e)}(n),function(n){const e=document.createElement("div");e.setAttribute("id","about"),e.classList.add("text-box");const t=document.createElement("h3");t.innerText="About Us";const r=document.createElement("p");r.classList.add("text"),r.innerText="The place has been operating since 1924 and was established by immigrants from Thessaloniki. 30 years ago by David and Juliette Refaeli started running the place and have kept on doing so ever since. Apart from dozens of types of spices like black mustard seeds and organic flax there are also herbs and even amber that is made from whales and is beneficial according to the belief in male potency.",e.appendChild(t),e.appendChild(r),n.appendChild(e)}(n),n}()};t(962),function(){function e(n,e){n.forEach((n=>{n==e?e.classList.add("hidden"):n.classList.remove("hidden")}))}!function(t){const r=document.createElement("nav"),o=function(){const t=document.createElement("ul"),r=document.createElement("li"),o=document.createElement("li"),i=document.createElement("li");return function(t,r,o){t.innerText="Home",r.innerText="Products",o.innerText="Contact",t.setAttribute("id","home"),t.classList.add("hidden"),r.setAttribute("id","products"),o.setAttribute("id","contact"),function(t,r,o){t.addEventListener("click",(()=>{content.parentNode.removeChild(content),document.body.appendChild(n()),e([t,r,o],t)})),r.addEventListener("click",(()=>{content.parentNode.removeChild(content),document.body.appendChild(function(){const n=document.createElement("div");return n.setAttribute("id","content"),n}()),e([t,r,o],r)})),o.addEventListener("click",(()=>{content.parentNode.removeChild(content),document.body.appendChild(function(){const n=document.createElement("div");return n.setAttribute("id","content"),function(n){const e=document.createElement("div");e.setAttribute("id","opening-hours"),e.classList.add("text-box");const t=document.createElement("h3");t.innerText="Opening Hours";const r=document.createElement("p");r.classList.add("text"),r.innerText="Sunday: 7:30am–7:30pm\nMonday: 7:30am–7:30pm\nTuesday: 7:30am–7:30pm\nWednesday: 7:30am–7:30pm\nThursday: 7:30am–7:30pm\nFriday: 7:30am–3pm\nSaturday: Closed\n",e.appendChild(t),e.appendChild(r),n.appendChild(e)}(n),function(n){const e=document.createElement("div");e.setAttribute("id","lcation"),e.classList.add("text-box");const t=document.createElement("h3");t.innerText="Location";const r=document.createElement("p");r.classList.add("text"),r.innerText="49 Levinsky Street, Levinsky Market Tel Aviv \n03-6824614",e.appendChild(t),e.appendChild(r),n.appendChild(e)}(n),n}()),e([t,r,o],o)}))}(t,r,o)}(r,o,i),t.classList.add("tab-list"),t.appendChild(r),t.appendChild(o),t.appendChild(i),t}();r.appendChild(o),t.appendChild(r),document.body.appendChild(t),document.body.appendChild(n())}(function(){const n=document.createElement("header"),e=document.createElement("h1");return e.innerText="Atlas",e.setAttribute("id","title"),n.appendChild(e),n}())}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,